apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: learning
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: backend
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: MONGO_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: mongo-username
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: mongo-password
            - name: MONGO_HOST
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: mongo-host
            - name: MONGO_PORT
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: mongo-port
          readinessProbe:
            httpGet:
              path: /v1/healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /v1/healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 20
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config.yml
              subPath: config.yml
      volumes:
        - name: config-volume
          configMap:
            name: backend-config
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: learning
spec:
  type: NodePort
  selector:
    app: backend
  ports:
    - port: 80
      targetPort: 8080
      nodePort: 30080
